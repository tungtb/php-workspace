version: "3.8"
services:
  nginx:
    container_name: nginx
    build: ./docker/nginx
    command: nginx -g "daemon off;"
    links:
      - php
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./docker/nginx/default.nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src:/var/www/html
      - ./docker/nginx/logs:/var/log/nginx
    networks:
      app-network:
        aliases:
          - ecom-cms.com
          - ecom-backend.com
  php:
    container_name: php
    build: ./docker/php
    links:
      - mysql
    ports:
      - "9000:9000"
    restart: always
    volumes:
      - ./src:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./xdebug:/var/logs/xdebug
    working_dir: /var/www/html
    networks:
      - app-network
  mysql:
    container_name: mysql
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ggg@2022
    ports:
      - 3306:3306
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
  adminer:
    container_name: adminer
    command: php -S 0.0.0.0:8080 -t /var/www/html
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - 8081:8080
    restart: always
    networks:
      - app-network
  redis:
    container_name: redis
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass ggg@2022
    volumes:
        - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
        - "6379:6379"
    networks:
      - app-network
  redis-commander:
    container_name: redis-commander
    image: "rediscommander/redis-commander:latest"
    restart: always
    depends_on:
      - redis
    environment: 
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - REDIS_PASSWORD=ggg@2022
        - HTTP_USER=admin
        - HTTP_PASSWORD=ggg@2022
    ports:
        - "28086:8081"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  mysql_data:
